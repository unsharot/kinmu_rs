step_count = 200000

# seed = 0

score_functions = [

{display_name = "KIA", scores = [
"PatternFixed (Every (), [K,I], 100)",
"PatternFixed (Every (), [Y,I], 100)",
]},

{display_name = "KNIA", scores = [
"PatternGeneral (Every (), [[K,Y],[N,O,H],[I]], 10)",
]},

{display_name = "NNIA", scores = [
"PatternGeneral (Every (), [[N,O,H],[N,O,H],[I]], -300)",
]},

{display_name = "4連勤", scores = [
"Streak (Every (), [N,O,H,I,A], 4, 200)",
]},

{display_name = "5連勤", scores = [
"Streak (Every (), [N,O,H,I,A], 5, 1000)",
]},

{display_name = "6連勤", scores = [
"Streak (Every (), [N,O,H,I,A], 6, 4000)",
]},

{display_name = "7連勤", scores = [
"Streak (Every (), [N,O,H,I,A], 7, 10000)",
]},

{display_name = "2連休報酬", scores = [
"Streak (Every (), [K,Y], 2, -100)",
]},

{display_name = "2連休が必要", scores = [
"PatternGeneralAny (Every (), [[K,Y], [K,Y]], -1000)",
], filter = {low_pass = -12000}},

{display_name = "2連休が必要(バッファーなし)", scores = [
"PatternGeneralAny (DayExceptBuffer (), [[K,Y], [K,Y]], -1000)",
], filter = {low_pass = -12000}},

{display_name = "NG", scores = [
"NGPair (DayExceptBuffer (), I, 1000)",
]},

{display_name = "夜勤の前後のバランス", scores = [
"ShiftHalfBalance (DayExceptBuffer (), I, 10)",
]},

{display_name = "夜勤のスタッフ数", scores = [
"StaffCountRegardDayAttribute (DayExceptBuffer (), I, IStaffCount, 100)",
],filter={low_pass=140000}},

{display_name = "フロのスタッフ数", scores = [
"StaffCount (And (DayExceptBuffer (), ParticularDayState B), N, 5, 5)",
]},

{display_name = "フロ2のスタッフ数", scores = [
"StaffCount (And (DayExceptBuffer (), ParticularDayState 2), N, 3, 10)",
]},

{display_name = "平日のスタッフ数", scores = [
"StaffCount (And (DayExceptBuffer (), ParticularDayState W), N, 3, 10)",
]},

{display_name = "休日のスタッフ数", scores = [
"StaffCount (And (DayExceptBuffer (), ParticularDayState H), N, 3, 10)",
]},

{display_name = "計測のスタッフ数", scores = [
"StaffCount (And (DayExceptBuffer (), ParticularDayState M), N, 3, 10)",
]},

{display_name = "一人夜勤のチェック", scores = [
"StaffCountWithPremise (DayExceptBuffer (), I, 1, And (DayExceptBuffer (), StaffWithAttribute (IAloneAbility, 1)), I, 1, 100)",
],filter={low_pass=0}},

{display_name = "フロ前に一人夜勤を入れない", scores = [
"StaffCount (And (BeforeDayState B, DayExceptBuffer ()), I, 2, 100)",
],filter={low_pass=0}},

{display_name = "OHできる人が2人いるか", scores = [
"StaffCount (And (StaffWithAttribute (OHAbility, 1), DayExceptBuffer ()), N, 2, 50)",
],filter={low_pass=0}},

{display_name = "同じペアに3回以上ならない", scores = [
"NoSamePair (DayExceptBuffer (), 3, I, 1000)",
],filter={low_pass=0}},

{display_name = "同じペアに2回以上ならない", scores = [
"NoSamePair (DayExceptBuffer (), 2, I, 500)",
],filter={low_pass=0}},


{display_name = "土日祝休みの人が土日祝休んでいるか", scores = [
"StaffCount (And (StaffInRange (10, 12), ParticularDayState H), K, 3, 10000)",
],filter={low_pass=0}},

{display_name = "職員Lが3連勤に収まっているか", scores = [
"Streak (ParticularStaff 11, [N], 4, 1000)",
],filter={low_pass=0}},

]

update_function = "update5"

temp = {max = 100, min = 10}
