step_count = 1000000

# seed = 0

score_functions = [
{display_name = "IAK",scores = [
"PatternGeneral (True (), [[I], [N,O,H,I,K,Y]], 50000)",
"PatternGeneral (True (), [[A], [N,O,H,I,A]], 50000)",
"PatternGeneral (True (), [[N,O,H,A,K,Y], [A]], 50000)"
],warning = {min_pass = 0}},

{display_name = "KIA", scores = [
"PatternFixed (True (), [K,I], 100)",
"PatternFixed (True (), [Y,I], 100)",
]},

{display_name = "KNIA", scores = [
"PatternGeneral (True (), [[K,Y],[N,O,H],[I]], 10)",
]},

{display_name = "NNIA", scores = [
"PatternGeneral (True (), [[N,O,H],[N,O,H],[I]], -300)",
]},

{display_name = "ON", scores = [
"PatternFixed (True (), [O,N], 100)",
]},

{display_name = "NH", scores = [
"PatternFixed (True (), [N,H], 1000)",
]},

{display_name = "OH", scores = [
"PatternFixed (True (), [O,H], 2000)",
]},

{display_name = "4連勤", scores = [
"Streak (True (), [N,O,H,I,A], 4, 200)",
]},

{display_name = "5連勤", scores = [
"Streak (True (), [N,O,H,I,A], 5, 1000)",
]},

{display_name = "6連勤", scores = [
"Streak (True (), [N,O,H,I,A], 6, 4000)",
]},

{display_name = "7連勤", scores = [
"Streak (True (), [N,O,H,I,A], 7, 10000)",
]},

{display_name = "NG", scores = [
"NGPair (NoBuffer (), I, 1000)",
],warning={min_pass = 0}},

{display_name = "2連休報酬", scores = [
"Streak (True (), [K,Y], 2, -100)",
]},

{display_name = "2連休が必要", scores = [
"PatternGeneralAny (True (), [[K,Y], [K,Y]], -1000)",
], warning = {min_pass = -13000}},

{display_name = "2連休が必要(バッファーなし)", scores = [
"PatternGeneralAny (NoBuffer (), [[K,Y], [K,Y]], -1000)",
], warning = {min_pass = -13000}},

{display_name = "遅早のバランス", scores = [
"ShiftsBalance (NoBuffer (), O, H, 3)",
]},

{display_name = "夜勤の前後のバランス", scores = [
"ShiftHalfBalance (NoBuffer (), I, 10)",
]},

{display_name = "遅番の前後のバランス", scores = [
"ShiftHalfBalance (NoBuffer (), O, 3)",
]},

{display_name = "早番の前後のバランス", scores = [
"ShiftHalfBalance (NoBuffer (), H, 3)",
]},

{display_name = "公休の日数", scores = [
"DayCountRegardStaffAttribute (NoBuffer (), K, KDayCount, 200)",
],warning={min_pass=0}},

{display_name = "夜勤の日数", scores = [
"DayCountRegardStaffAttribute (NoBuffer (), I, IDayCount, 200)",
],warning={min_pass=0}},

{display_name = "遅番の日数", scores = [
"DayCountRegardStaffAttribute (And (Not StaffWithAttribute (ODayCount, -1), NoBuffer ()), O, ODayCount, 100)",
],warning={min_pass=0}},

{display_name = "早番の日数", scores = [
"DayCountRegardStaffAttribute (And (Not StaffWithAttribute (HDayCount, -1), NoBuffer ()), H, HDayCount, 100)",
],warning={min_pass=0}},

{display_name = "夜勤のスタッフ数", scores = [
"StaffCountRegardDayAttribute (NoBuffer (), I, IStaffCount, 100)",
],warning={min_pass=140000}},

{display_name = "フロのスタッフ数", scores = [
"StaffCount (And (NoBuffer (), DayState B), N, 3, 5)",
]},

{display_name = "フロ2のスタッフ数", scores = [
"StaffCount (And (NoBuffer (), DayState 2), N, 1, 10)",
]},

{display_name = "平日のスタッフ数", scores = [
"StaffCount (And (NoBuffer (), DayState W), N, 1, 10)",
]},

{display_name = "休日のスタッフ数", scores = [
"StaffCount (And (NoBuffer (), DayState H), N, 1, 10)",
]},

{display_name = "計測のスタッフ数", scores = [
"StaffCount (And (NoBuffer (), DayState M), N, 1, 10)",
]},

{display_name = "遅番のスタッフ数", scores = [
"StaffCount (NoBuffer (), O, 1, 100)",
],warning={min_pass=0}},

{display_name = "早番のスタッフ数", scores = [
"StaffCount (NoBuffer (), H, 1, 100)",
],warning={min_pass=0}},


{display_name = "一人夜勤のチェック", scores = [
"StaffCountWithPremise (NoBuffer (), I, 1, And (NoBuffer (), StaffWithAttribute (IAloneAbility, 1)), I, 1, 100)",
],warning={min_pass=0}},


{display_name = "フロ前に一人夜勤を入れない", scores = [
"StaffCount (And (BeforeDayState B, NoBuffer ()), I, 2, 100)",
],warning={min_pass=0}},

{display_name = "同じペアに3回以上ならない", scores = [
"NoSamePair (NoBuffer (), 3, I, 1000)",
],warning={min_pass=0}},

{display_name = "同じペアに2回以上ならない", scores = [
"NoSamePair (NoBuffer (), 2, I, 500)",
],warning={min_pass=0}},


{display_name = "土日祝休みの人が土日祝休んでいるか", scores = [
"StaffCount (And (Any [StaffNamed 職員K, StaffNamed 職員L, StaffNamed 職員M], DayState H), K, 3, 10000)",
],warning={min_pass=0}},


{display_name = "職員Lが3連勤に収まっているか", scores = [
"Streak (StaffNamed 職員L, [N], 4, 1000)",
],warning={min_pass=0}},


{display_name = "Undefのチェック", scores = [
"StaffCount (NoBuffer (), U, 0, 100000)",
],warning={min_pass=0}},

{display_name = "職員Gが指定された日で夜勤しない", scores = [
"StaffCount (And (StaffNamed 職員G, DayInList [3,5,8,12]), I, 0, 10000)",
],warning={min_pass=0}},

{display_name = "職員Mが週3日勤務に収まっているか", scores = [
"ShiftsCountAtMost (And (StaffNamed 職員M, DayInRange (1,6)),   [N], 2, 100)", # 初日はこれ
"ShiftsCountAtMost (And (StaffNamed 職員M, DayInRange (7,13)),  [N], 3, 100)",
"ShiftsCountAtMost (And (StaffNamed 職員M, DayInRange (14,20)), [N], 3, 100)",
"ShiftsCountAtMost (And (StaffNamed 職員M, DayInRange (21,27)), [N], 3, 100)",
"ShiftsCountAtMost (And (StaffNamed 職員M, DayInRange (28,31)), [N], 3, 100)",
],warning={min_pass=0}},

]

update_function = "update_range_or_iaknoh_repeat"

temperature = {begin = 1000, end = 0}
